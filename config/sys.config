[

  {kernel,[
    {error_logger, {file, "log/error.log"}},
    % {error_logger_format_depth, 50},
    {inet_dist_listen_min, 12000},
    {inet_dist_listen_max, 13000}
  ]},

 {goanna,[
    %% data_retrival_method
    %%   {push, Interval, PushModule, PushAmount} |
    %%   pull
    {data_retrival_method,
       {push, 10, goanna_forward_file, 1000}
       % pull
    },

    %% nodes
    %%   {Node :: atom(), Cookie :: atom()}
    {nodes, [
    ]},

    %% traces
    %%   {Module :: atom()}
    %%   {Module :: atom(), function :: atom()}
    %%   {Module :: atom(), function :: atom(), arity :: integer()} |
    %%   nonempty_list() Ex: "ets:lookup(Cust, customers) when Cust==homer -> return"
    {traces, [

    ]},

    %% default_trace_options ( false = indefinite )
    %%  {time, non_neg_integer() | false}  Max Time to trace
    %%  {messages, non_neg_integer() | false} Max messages
    {default_trace_options, [
        {time, false},
        {messages, false}
    ]}

  ]},

{hawk, [
	{ conn_retry_wait, 100 },
	{ connection_retries, 10000 }
       ]
},

{crell,[
    %% 1 - remote load only
    %% 2 - remote library only ( in progress )
    %% 3 - remote load/library ( first library tries, then remote loading ) ( in progress )
    {remote_action,1},

    %% Nimby Server Port
    {nimby_listen_port, 9877}
]},

{crell_web, [
    {http_port, 9876}
]},

 {sasl, [
         {sasl_error_logger, {file, "log/sasl-error.log"}},
         {errlog_type, error},
         {error_logger_mf_dir, "log/sasl"},      % Log directory
         {error_logger_mf_maxbytes, 10485760},   % 10 MB max file size
         {error_logger_mf_maxfiles, 5}           % 5 files max
        ]}
].

